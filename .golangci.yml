# Most taken from https://olegk.dev/go-linters-configuration-the-right-version

run:
  concurrency: 8
  timeout: 30m
  issues-exit-code: 1
  tests: true
  build-tags:
    - integration 
  skip-dirs:
    # - src/external_libs

  #skip-files:
  #  - "protobuf/.*.go"

  modules-download-mode: vendor
  allow-parallel-runners: false
  go: ""

linters:
  fast: false

  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - durationcheck
    - errcheck 
    - errname
    - errorlint
    - gocritic
    - godot
    - gofmt
    - gofumpt
    - goimports
    - gomoddirectives
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle
    - tenv
    - testableexamples
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign

  disable:
    - containedctx
    
    # Checks function and package cyclomatic complexity.
    # I can have a long but trivial switch-case.
    #
    # Cyclomatic complexity is a measurement, not a goal.
    # (c) Bryan C. Mills / https://github.com/bcmills
    - cyclop
    
    # Check declaration order of types, consts, vars and funcs.
    # I like it but I don't use it.
    - decorder

    # Checks if package imports are in a list of acceptable packages.
    # I'm very picky about what I import, so no automation.
    - depguard

    # Checks assignments with too many blank identifiers. Very rare.
    - dogsled
    
    # Tool for code clone detection.
    - dupl
    
    # Find duplicate words, rare.
    - dupword

    #Check the error from json.Marshal
    - errchkjson
    
    # Forces to handle more cases. Cool but noisy.
    - exhaustive
    - exhaustruct

    # Forbids some identifiers. I don't have a case for it.
    - forbidigo
    
    # Finds forced type assertions, very good for juniors.
    - forcetypeassert
    
    # I might have long but a simple function.
    - funlen

    # Imports order.
    - gci
    
    # I'm not a fan of ginkgo and gomega packages.
    - ginkgolinter

    # Checks that compiler directive comments (//go:) are valid. Rare.
    - gocheckcompilerdirectives

    # Globals and init() are ok.
    - gochecknoglobals
    - gochecknoinits

    # Same as `cyclop` linter (see above)
    - gocognit
    - goconst
    - gocyclo

    # TODO and friends are ok.
    - godox

    # Check the error handling expressions. Too noisy.
    - err113

    # I don't use file headers.
    - goheader
  
    # Allowed/blocked packages to import. I prefer to do it manually.
    - gomodguard

    # Printf-like functions must have -f.
    - goprintffuncname

    # Groupt declarations, I prefer manually.
    - grouper

    # Checks imports aliases, rare.
    - importas

    # Forces tiny interfaces, very subjective.
    - interfacebloat

    # Accept interfaces, return types. Not always.
    - ireturn

    # I don't set line length. 120 is fine by the way ;)
    - lll

    # Some log checkers, might be useful.
    - loggercheck
    
    # Maintainability index of each function, subjective.
    - maintidx
   
    # Slice declarations with non-zero initial length. Not my case.
    - makezero
   
    # Enforce tags in un/marshaled structs. Cool but not my case.
    - musttag
    
    # Deeply nested if statements, subjective.
    - nestif

    # Forces newlines in some places.
    - nlreturn

    # Reports all named returns, not that bad.
    - nonamedreturns

    # Finds misuse of Sprintf with host:port in a URL. Cool but rare.
    - nosprintfhostport

    # I don't use t.Parallel() that much.
    - paralleltest
    
    # Often non-`_test` package is ok.
    - testpackage

    # Compiler can do it too :)
    - typecheck

    # I'm fine with long variable names with a small scope.
    - varnamelen
    
    # gofmt,gofumpt covers that (from what I know).
    - whitespace

    # Don't find it useful to wrap all errors from external packages.
    - wrapcheck
    
    # Forces you to use empty lines. Great if configured correctly.
    # I mean there is an agreement in a team.
    - wsl

linters-settings:
  # I'm biased and I'm enabling more than 100 checks
  # Might be too much for you. See https://go-critic.com/overview.html
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      # These 3 will detect many cases, but they do sense
      # if it's performance oriented code
      - hugeParam
      - rangeExprCopy
      - rangeValCopy

  errcheck:
    # Report `a := b.(MyStruct)` when `a, ok := ...` should be.
    check-type-assertions: true # Default: false

    # Report skipped checks:`num, _ := strconv.Atoi(numStr)`.
    check-blank: true # Default: false
    
    # Function to skip.
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  govet:
    disable:
      - fieldalignment

  nakedret:
    # No naked returns, ever.
    max-func-lines: 1 # Default: 30

  tagliatelle:
    case:
      rules:
        json: snake
        yaml: snake
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab

# See also https://gist.github.com/cristaloleg/dc29ca0ef2fb554de28d94c3c6f6dc88

output:
  formats: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  path-prefix: ""
  sort-results: true

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  fix: true
  exclude-dirs-use-default: false
  uniq-by-line: false
